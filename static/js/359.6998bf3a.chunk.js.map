{"version":3,"file":"static/js/359.6998bf3a.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","data/resume/courses.js","data/resume/degrees.js","data/resume/positions.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h3>Education</h3>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h4><a href={data.link}>{data.company}</a> - {data.position}</h4>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h3>Experience</h3>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={this.props.categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h3>Skills</h3>\n          <p> </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data, last }) => (\n  <li className=\"course-container\">\n    <a href={data.link}>\n      <h4 className=\"course-number\">{data.number}:</h4>\n      <p className=\"course-name\">{data.title}</p>\n    </a>\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  last: PropTypes.bool,\n};\n\nCourse.defaultProps = {\n  last: false,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) => courses.sort((a, b) => {\n  let ret = 0;\n  if (a.university > b.university) ret = -1;\n  else if (a.university < b.university) ret = 1;\n  else if (a.number > b.number) ret = 1;\n  else if (a.number < b.number) ret = -1;\n  return ret;\n}).map((course, idx) => (\n  <Course\n    data={course}\n    key={course.title}\n    last={idx === courses.length - 1}\n  />\n));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h3>Selected Courses</h3>\n    </div>\n    <ul className=\"course-list\">\n      {getRows(data)}\n    </ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    number: PropTypes.string,\n    link: PropTypes.string,\n    university: PropTypes.string,\n  })),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","const courses = [\n  {\n    title: 'Spring Framework for Beginners with Spring Boot',\n    number: 'February 2021',\n    link: 'https://www.udemy.com/course/spring-5-with-spring-boot-2/',\n    university: 'Udemy',\n  },\n  {\n    title: 'Practical OpenShift for Developers - OpenShift 4',\n    number: 'March 2022',\n    link: 'https://www.udemy.com/certificate/UC-55661cf5-db89-4908-acd8-f2f73588eebe/',\n    university: 'Udemy',\n  },\n  {\n    title: 'SQL and Relational Database 101 Certification',\n    number: 'January 2021',\n    link: 'https://cognitiveclass.ai/courses/learn-sql-relational-databases',\n    university: 'Cognitive Class',\n  },\n  {\n    title: 'Certified Java Trainee',\n    number: 'August 2018',\n    link: '',\n    university: 'Jspider Class',\n  },\n];\n\nexport default courses;\n","const degrees = [\n  {\n    school: 'National Institute of Technology, Calicut',\n    degree: 'Masters of Technology in Information Security',\n    link: 'http://www.nitc.ac.in/',\n    year: 2017,\n  },\n  {\n    school: 'Government College Of Engineering, Aurangabad',\n    degree: 'B.E. Information Technology',\n    link: 'https://geca.ac.in/home.aspx',\n    year: 2014,\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'WorldPay By FIS',\n    position: 'Software Engineer II',\n    link: '',\n    daterange: 'October 2021 - Present',\n    points: [\n      'Developed and implemented an Account Updater Service using Java technologies to improve customer experience and reduce payment declines.',\n      'Owned and documented numerous RESTful WebServices, playing a key role in their design and implementation from scratch to integration with the Data Access Object (DAO) layer.',\n      'Contributed significantly to project DevOps activities by leveraging tools like Docker, Jenkins, OpenShift, and more (Ansible Tower, Opsgenie, Checkmarx, Blackduck, Splunk, Sysdig, Nexus, Venfi, Keytools, SonarQube).',\n      'Championed development best practices including version control, code reviews, unit testing, continuous integration, performance testing, security testing, and comprehensive documentation.',\n    ],\n  },\n  {\n    company: 'Mosambee',\n    position: 'Senior Software Engineer',\n    link: '',\n    daterange: 'September 2018 - October 2021',\n    points: [\n      'Utilized Java/J2EE technologies to design and develop web applications for the M-cash Settlement System (automating transaction settlements) and CLEO (a loan collection system).',\n      'Built highly interactive and user-friendly UIs using JavaScript, HTML, JSP, and CSS to enhance application functionality.',\n      'Played a pivotal role in designing and implementing the pricing engine and risk management functionalities for transactions.',\n      'Mentored, coached, and trained software trainees, fostering knowledge transfer within the team.',\n      'Collaborated effectively with cross-functional development teams to implement solutions, troubleshoot issues, and conduct code reviews.',\n      'Adhered to development best practices such as version control, unit testing, continuous integration, performance testing, security testing, and thorough documentation.',\n    ],\n  },\n];\n\nexport default positions;\n","// TODO: Add Athletic Skills, Office Skills,\n// Data Engineering, Data Science, ML Engineering, ... ?\n\nconst skills = [\n  {\n    title: 'Javascript',\n    competency: 4,\n    category: ['Web Development', 'Languages', 'Javascript'],\n  },\n  {\n    title: 'Amazon Web Services',\n    competency: 3,\n    category: ['Web Development', 'Tools'],\n  },\n  {\n    title: 'MYSQL',\n    competency: 4,\n    category: ['Web Development', 'Databases', 'Languages'],\n  },\n  {\n    title: 'HTML + SASS/SCSS/CSS',\n    competency: 3,\n    category: ['Web Development', 'Languages'],\n  },\n  {\n    title: 'Java',\n    competency: 4,\n    category: ['Languages', 'Java'],\n  },\n  {\n    title: 'Spring Boot',\n    competency: 4,\n    category: ['Framework'],\n  },\n  {\n    title: 'Spring',\n    competency: 3,\n    category: ['Framework'],\n  },\n  {\n    title: 'Spring Security',\n    competency: 4,\n    category: ['Framework'],\n  },\n  {\n    title: 'Angular JS',\n    competency: 2,\n    category: ['Framework'],\n  },\n  {\n    title: 'Cassandra',\n    competency: 3,\n    category: ['Databases', 'Languages'],\n  },\n  {\n    title: 'Postgres',\n    competency: 4,\n    category: ['Web Development', 'Databases', 'Languages'],\n  },\n  {\n    title: 'Docker',\n    competency: 3,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Jenkins',\n    competency: 3,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'OpenShift',\n    competency: 4,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Ansible Tower',\n    competency: 4,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Opsgenie',\n    competency: 2,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Checkmarx',\n    competency: 2,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Blackduck',\n    competency: 3,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Splunk',\n    competency: 3,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Sysdig',\n    competency: 3,\n    category: ['DevOps Tools'],\n  },\n  {\n    title: 'Venfi',\n    competency: 4,\n    category: ['DevOps Tools'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7a',\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7a',\n  '#6968b3',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport Courses from '../components/Resume/Courses';\n\nimport courses from '../data/resume/courses';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Skills',\n  'Courses',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n    description=\"Mikhil Wankhede Resume\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"resume\">Resume</Link></h2>\n          <div className=\"link-container\">\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\n              </h4>))}\n          </div>\n\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Skills skills={skills} categories={categories} />\n      <Courses data={courses} />\n\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","year","Education","id","map","Degree","defaultProps","company","position","daterange","points","point","Experience","job","Job","handleClick","active","label","concat","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","name","color","barStyle","width","String","Math","min","max","style","Skills","Component","constructor","props","super","handleChildClick","this","setState","prevState","buttons","Object","keys","reduce","obj","key","All","some","state","skills","handleProps","getRows","actCat","sort","a","b","ret","skill","getButtons","CategoryButton","render","Course","last","number","courses","university","course","idx","length","Courses","colors","Set","acc","index","sections","Resume","Main","description","Link","to","sec","toLowerCase","degrees","positions"],"sourceRoot":""}